
networks:
  extranet:
    name: ${PROJECT_NAME}-extranet
    driver: bridge
  intranet:
    name: ${PROJECT_NAME}-intranet
    driver: bridge
    internal: true

volumes:
  app:
    name: ${PROJECT_NAME}-app
  rabbitmq:
    name: ${PROJECT_NAME}-rabbitmq
  redis:
    name: ${PROJECT_NAME}-redis
  mariadb:
    name: ${PROJECT_NAME}-mariadb
  typesense:
    name: ${PROJECT_NAME}-typesense
  nfs:
    name: ${PROJECT_NAME}-nfs

services:

  webserver:
    container_name: ${PROJECT_NAME}-webserver
    restart: unless-stopped
    depends_on:
      - php
      - node
    build:
      context: .
      dockerfile: ./deployments/docker/nginx/Dockerfile
    environment:
      - HTTPS_METHOD=noredirect
      - PROJECT_NAME=${PROJECT_NAME}
    networks:
      - intranet
      - extranet
    volumes:
      - ./public:/srv/app/public:ro
      - ./deployments/docker/nginx/default.conf.template:/etc/nginx/templates/default.conf.template
    ports:
      - "80:8080"
      - "443:443"

  php:
    container_name: ${PROJECT_NAME}-php
    build:
      context: .
      dockerfile: ./deployments/docker/php/Dockerfile
    restart: unless-stopped
    depends_on:
      - mariadb
    env_file:
      - .env
    networks:
      - extranet
    volumes:
      - .:/srv/local:ro
      - app:/srv/app:rw
      - ./deployments/docker/php/php-fpm.conf:/etc/php8.1.3/php-fpm.conf
      - ./deployments/docker/php/php.ini:/usr/local/etc/php/php.ini
    command: --define opcache.validate_timestamps=On
    entrypoint: /srv/local/deployments/docker/php/entrypoint.sh

  node:
    container_name: ${PROJECT_NAME}-node
    depends_on:
      - php
    build:
      context: .
      dockerfile: ./deployments/docker/node/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/srv/local:ro
      - app:/srv/app:rw
      - ./var/log/${APP_ENV}/npm:/root/.npm/_logs
    networks:
      - extranet
    entrypoint: /srv/local/deployments/docker/node/entrypoint.sh

  mariadb:
    container_name: ${PROJECT_NAME}-mariadb
    restart: unless-stopped
    image: mariadb:latest
    ports:
      - 3306:3306
    env_file:
      - .env
    networks:
      - intranet
    volumes:
      - mariadb:/var/lib/mysql

  rabbitmq:
    container_name: ${PROJECT_NAME}-rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    hostname: rabbitmq
    ports:
      - 15672:15672
      - 35197:35197
      - 4369:4369 
      - 5672:5672 
      - 5671:5671 
    networks:
      - intranet
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit

  typesense:
    container_name: ${PROJECT_NAME}-typesense
    image: typesense/typesense:0.21.0 # to be upgraded to 28.0.rc20
    restart: unless-stopped
    ports:
      - 8108:8108
    env_file:
      - .env
    environment:
      TYPESENSE_DATA_DIR: /typesense
      TYPESENSE_LOG_LEVEL: warn
    volumes:
      - typesense:/typesense
    networks:
      - intranet

  nfs:
    container_name: ${PROJECT_NAME}-nfs
    build:
      context: ./deployments/docker/nfs
      dockerfile: Dockerfile
    privileged: true
    ports:
      - 2049:2049
    restart: unless-stopped
    volumes:
      - nfs:/nfs
    environment:
      - SHARED_DIRECTORY=/nfs
    networks:
      - intranet

  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}-redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - intranet
    volumes:
      - redis:/data
